using System;
using System.Collections.Generic;
using System.Linq;
using System.Xml.Linq;

namespace XMLToObject
{
    /// Класс Order представляет заказ с информацией о доставке и списком товаров
    public class Order
    {
        public string Name { get; set; }
        public string Street { get; set; }
        public string Address { get; set; }
        public string Country { get; set; }
        public List<Item> Items { get; set; }
    }
    
    /// Класс Item представляет товар с названием, количеством и стоимостью
    public class Item
    {
        public string Title { get; set; }
        public int Quantity { get; set; }
        public decimal Price { get; set; }
    }

    /// Статический класс XmlParser выполняет преобразование XML в объект класса Order
    public static class XmlParser
    {
        public static Order ParseXml(string xml)
        {
            XElement root = XElement.Parse(xml);

            // Создаем объект Order и заполняем его данными из XML
            Order order = new Order
            {
                Name = root.Element("shipTo").Element("name").Value,
                Street = root.Element("shipTo").Element("street").Value,
                Address = root.Element("shipTo").Element("address").Value,
                Country = root.Element("shipTo").Element("country").Value
            };
            
            /// Создаем список товаров и заполняем его данными из XML
            order.Items = root.Element("items")
                .Elements("item")
                .Select(item => new Item
                {
                    Title = item.Element("title").Value,
                    Quantity = int.Parse(item.Element("quantity").Value),
                    Price = decimal.Parse(item.Element("price").Value)
                })
                .ToList();
            
            return order;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            string xml = @"<?xml version=""1.0""?>
                            <shipOrder>
                                <shipTo>
                                    <name>Tove Svedson</name>
                                    <street>Raghildvei2</street>
                                    <address>4000 Stavanger</address>
                                    <country>Norway</country>
                                </shipTo>
                                <items>
                                    <item>
                                        <title>Empire Burlesque</title>
                                        <quantity>1</quantity>
                                        <price>10.90</price>
                                    </item>
                                    <item>
                                        <title>Beach Ball</title>
                                        <quantity>2</quantity>
                                        <price>4.50</price>
                                    </item>
                                </items>
                            </shipOrder>";

            /// Преобразуем XML в объект Order
            Order order = XmlParser.ParseXml(xml);

            /// Выводим информацию о доставке
            Console.WriteLine("ShipTo:");
            Console.WriteLine($"Name: {order.Name}");
            Console.WriteLine($"Street: {order.Street}");
            Console.WriteLine($"Address: {order.Address}");
            Console.WriteLine($"Country: {order.Country}");

            // Выводим список товаров
            Console.WriteLine("Items:");
            foreach (var item in order.Items)
            {

                Console.WriteLine($"Title: {item.Title}");
                Console.WriteLine($"Quantity: {item.Quantity}");
                Console.WriteLine($"Price: {item.Price}");
                Console.WriteLine();
            }
        }
    }
}
